# Example .env file for quick testing
# Copy this to .env and update with your actual values

# ============================================================================
# GOOGLE CLOUD / GEMINI CONFIGURATION
# ============================================================================

# For local development without Google Cloud (recommended for hackathon demo)
GOOGLE_GENAI_USE_VERTEXAI=False

# Gemini API Key (get from https://makersuite.google.com/app/apikey)
GEMINI_API_KEY=your_gemini_api_key_here

# For production deployment to Google Cloud
# GOOGLE_CLOUD_PROJECT=your-project-id
# GOOGLE_CLOUD_LOCATION=us-east1
# GOOGLE_GENAI_USE_VERTEXAI=True

# ============================================================================
# AI MODEL CONFIGURATION
# ============================================================================

# Fast model for operational tasks (monitoring, alerts)
AI_MODEL=gemini-2.5-flash

# High-capability model for complex analysis (nutrients, optimization)
CRITIC_MODEL=gemini-2.5-pro

# Alternative models you can try:
# AI_MODEL=gemini-2.0-flash-exp
# CRITIC_MODEL=gemini-1.5-pro

# ============================================================================
# IOT DEVICE CONFIGURATION
# ============================================================================

# Raspberry Pi running the Node.js backend
RASPBERRY_PI_IP=192.168.1.100

# Node.js Express API port
BACKEND_PORT=3000

# Timeouts (seconds)
SENSOR_TIMEOUT=10
PUMP_TIMEOUT=30

# Safety limit for irrigation duration (30 minutes max)
MAX_IRRIGATION_DURATION=1800

# ============================================================================
# WEATHER SERVICE CONFIGURATION
# ============================================================================

# OpenWeatherMap API key (get free key from https://openweathermap.org/api)
OPENWEATHER_API_KEY=your_openweather_api_key_here

# Location for weather queries (City,CountryCode format)
WEATHER_LOCATION=Santiago,CL
# Examples:
# WEATHER_LOCATION=New York,US
# WEATHER_LOCATION=London,GB
# WEATHER_LOCATION=Tokyo,JP

# Number of days for weather forecast (max 5 for free tier)
FORECAST_DAYS=3

# ============================================================================
# SYSTEM CONFIGURATION
# ============================================================================

# How often to run automated monitoring cycles (seconds)
# 300 = 5 minutes, 600 = 10 minutes, 900 = 15 minutes
SENSOR_POLLING_INTERVAL=300

# Minimum time between similar alerts (minutes) - prevents notification spam
ALERT_COOLDOWN_MINUTES=30

# Maximum number of retry attempts for failed operations
MAX_RETRY_ATTEMPTS=3

# ============================================================================
# NOTIFICATION CONFIGURATION (Optional)
# ============================================================================

# Telegram Bot Integration (optional)
# Create bot: https://t.me/BotFather
TELEGRAM_BOT_TOKEN=
TELEGRAM_CHAT_ID=

# Email Notifications via SMTP (optional)
SMTP_SERVER=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
NOTIFICATION_EMAIL=

# Example Gmail SMTP configuration:
# SMTP_SERVER=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USERNAME=your.email@gmail.com
# SMTP_PASSWORD=your_app_specific_password
# NOTIFICATION_EMAIL=recipient@example.com

# ============================================================================
# DEPLOYMENT CONFIGURATION (For Google Cloud Run)
# ============================================================================

PROJECT_ID=your-project-id
SERVICE_NAME=intelligent-irrigation-agent
REGION=us-east1
SERVICE_ACCOUNT=irrigation-service@your-project-id.iam.gserviceaccount.com

# ============================================================================
# NOTES
# ============================================================================

# Required for basic functionality:
# - GEMINI_API_KEY (or GOOGLE_CLOUD_PROJECT if using VertexAI)
# - RASPBERRY_PI_IP (or use mock backend for testing)

# Optional but recommended:
# - OPENWEATHER_API_KEY (for weather-based optimization)

# Optional for enhanced features:
# - TELEGRAM_BOT_TOKEN + TELEGRAM_CHAT_ID (for mobile notifications)
# - SMTP credentials (for email alerts)

# Quick start commands:
# 1. cp .env.example .env
# 2. Edit .env with your GEMINI_API_KEY
# 3. python run_agent.py --status

# Troubleshooting:
# - Check environment loading: make env-check
# - Test tools individually: python examples.py
# - View logs: tail -f irrigation_agent.log
# ============================================================================
# AGRICULTURE DATA (USDA Quick Stats)
# ============================================================================

# API key for USDA Quick Stats API (https://quickstats.nass.usda.gov/api)
USDA_QUICKSTATS_API_KEY=your_usda_quickstats_api_key_here


# ============================================================================
# AUDIO (ElevenLabs)
# ============================================================================
ELEVENLABS_API_KEY=your_elevenlabs_api_key_here

